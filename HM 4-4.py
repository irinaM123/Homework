# Напишите функцию multiplication_chain, которая принимает положительное число num,
# и возвращает количество раз count_multy, которое вы должны перемножить цифры числа num и полученных произведений,
# пока не получите одну цифру.
# Например (Ввод --> Вывод) :
#
# 39 --> 3 (потому что 3*9 = 27, 2*7 = 14, 1*4 = 4, вот 4 одна цифра. Итого 3 итерации)
# 999 --> 4 (потому что 9*9*9 = 729, 7*2*9 = 126, 1*2*6 = 12, наконец 1*2 = 2, Итого 4 итерации)
# 4 --> 0 (4 уже одна цифра, а значит мы проделали 0 итераций)

def multiplication_chain(num):
    # введем доп переменные:
    # count_multy - кол-во итераций, сколько раз перемножали цифры числа num
    count_multy = 0
    # введем Список, элементы которого - цифры, из которых состоит num
    s_list_num = []
    # j - число, которое получается после перемножения цифр числа num current_num
    current_num = 1
    # преобразуем num в строку и растащим элементы строки в элементы списка s_list_num
    for i in str(num):
        s_list_num.append(int(i))
    while len(str(num)) >= 2:
        for i in range(len(s_list_num)):
            current_num = current_num * s_list_num[i]
        # первая итерация умножения прошла, увеличиваем счетчик
        count_multy = count_multy + 1
        # теперь наше новое число num - current_num
        num = current_num
        # обнулим список s_list_num и заново заполним его цифрами нового значения num
        s_list_num = []
        for i in str(num):
            s_list_num.append(int(i))
        # сбросим значение current_num, чтобы можно было заново перемножать
        current_num = 1
    return count_multy

# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ


data = [
    39, 4, 25, 999, 5050, 222333444
]

test_data = [
    3, 0, 2, 4, 1, 4
]


for i, d in enumerate(data):
    assert multiplication_chain(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')

